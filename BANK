CREATE SCHEMA BANK; 
USE BANK; 
-- CREATE THE BANK TABLE 
A) CREATE TABLE BANK ( 
    BANKID INT PRIMARY KEY, 
    BANKNAME VARCHAR(100), 
    LOCATION VARCHAR(100) 
); 

-- CREATE THE BRANCH TABLE 
CREATE TABLE BRANCH ( 
    BRANCHID INT PRIMARY KEY, 
    BRANCHNAME VARCHAR(100), 
    LOCATION VARCHAR(100), 
    BANKID INT, 
    FOREIGN KEY (BANKID) REFERENCES BANK (BANKID) 
); 

-- CREATE THE CUSTOMER TABLE 
CREATE TABLE CUSTOMER ( 
    CUSTOMERID INT PRIMARY KEY,     CUSTOMERNAME VARCHAR(100) 
    -- ADD OTHER CUSTOMER DETAILS AS NEEDED 
); 

-- CREATE THE ACCOUNT TABLE 
CREATE TABLE ACCOUNT ( 
    ACCOUNTNUMBER INT PRIMARY KEY, 
    ACCOUNTTYPE VARCHAR(50), 
    BALANCE DECIMAL(10, 2), 
    LASTTRANSACTIONDATE DATE, 
    BRANCHID INT, 
    FOREIGN KEY (BRANCHID) REFERENCES BRANCH (BRANCHID) 
); 

-- CREATE A JUNCTION TABLE FOR JOINT ACCOUNTS INVOLVING 
MULTIPLE CUSTOMERS 
CREATE TABLE JOINTACCOUNT ( 
    ACCOUNTNUMBER INT, 
    CUSTOMERID INT, 
    PRIMARY KEY (ACCOUNTNUMBER, CUSTOMERID), 
    FOREIGN KEY (ACCOUNTNUMBER) REFERENCES ACCOUNT 
(ACCOUNTNUMBER), 
    FOREIGN KEY (CUSTOMERID) REFERENCES CUSTOMER 
(CUSTOMERID) 
); 
B) -- INSERT DATA INTO THE BANK TABLE 
INSERT INTO BANK (BANKID, BANKNAME, LOCATION) 
VALUES 
    (1, 'ABC BANK', 'NEW YORK'), 
    (2, 'XYZ BANK', 'LOS ANGELES'); 

-- INSERT DATA INTO THE BRANCH TABLE 
INSERT INTO BRANCH (BRANCHID, BRANCHNAME, LOCATION, 
BANKID) 
VALUES 
    (101, 'MAIN BRANCH', 'NEW YORK', 1), 
    (102, 'DOWNTOWN BRANCH', 'LOS ANGELES', 2); 

-- INSERT DATA INTO THE CUSTOMER TABLE 
INSERT INTO CUSTOMER (CUSTOMERID, CUSTOMERNAME) 
VALUES 
    (1001, 'JOHN SMITH'), 
    (1002, 'JANE DOE'), 
    (1003, 'MICHAEL JOHNSON'), 
    (1004, 'EMMA BROWN'); 

-- INSERT DATA INTO THE ACCOUNT TABLE 
INSERT INTO ACCOUNT (ACCOUNTNUMBER, ACCOUNTTYPE, 
BALANCE, LASTTRANSACTIONDATE, BRANCHID) 
VALUES 
    (10001, 'SAVINGS', 5000.00, '2023-07-15', 101), 
    (10002, 'CHECKING', 12000.00, '2023-07-14', 102), 
    (10003, 'SAVINGS', 8000.00, '2023-07-13', 101), 
    (10004, 'SAVINGS', 6000.00, '2023-07-15', 102), 
    (10005, 'CHECKING', 15000.00, '2023-07-12', 101); 

-- INSERT DATA INTO THE JOINTACCOUNT TABLE (FOR DEMONSTRATION PURPOSES) 
INSERT INTO JOINTACCOUNT (ACCOUNTNUMBER, CUSTOMERID) 
VALUES 
    (10002, 1001), 
    (10002, 1003), 
    (10002, 1003), 
    (10003, 1001), 
    (10003, 1003); 
INSERT INTO JOINTACCOUNT VALUES(10004,1001); 
INSERT INTO JOINTACCOUNT VALUES(10005,1001); 
INSERT INTO JOINTACCOUNT VALUES(10004,1001); 
INSERT INTO JOINTACCOUNT VALUES(10005,1001); 
INSERT INTO JOINTACCOUNT VALUES(10003,1004); 
INSERT INTO JOINTACCOUNT VALUES(10003,1002); 
INSERT INTO JOINTACCOUNT VALUES(10004,1003); INSERT INTO JOINTACCOUNT VALUES(10005,1002); 

C)	SELECT  ACCOUNTNUMBER, ACCOUNTTYPE, 
    BALANCE, 
    CASE 
        WHEN BALANCE < 10000 THEN BALANCE * 1.05 
        ELSE BALANCE * 1.06 
    END AS NEWINTEREST 
FROM ACCOUNT; 
 

D)	SELECT ACCOUNTNUMBER 
FROM JOINTACCOUNT 
GROUP BY ACCOUNTNUMBER 
HAVING COUNT(CUSTOMERID) > 3; 
 

E)	DELIMITER // 

CREATE TRIGGER SETCURRENTDATE 
BEFORE INSERT ON ACCOUNT 
FOR EACH ROW 
BEGIN 
    SET NEW.LASTTRANSACTIONDATE = CURRENT_DATE(); 
END; 
// 

DELIMITER ;

 
F)	DELIMITER // 

CREATE PROCEDURE CUSTOMERDETAILS() 
BEGIN 
    -- CUSTOMER WITH THE HIGHEST NUMBER OF ACCOUNTS 
    SELECT CUSTOMERID, CUSTOMERNAME, 
           (SELECT COUNT(*) FROM ACCOUNT WHERE CUSTOMERID = 
C.CUSTOMERID) AS NUMOFACCOUNTS     FROM CUSTOMER C 
    ORDER BY NUMOFACCOUNTS DESC 
    LIMIT 1; 
END; 
// 

DELIMITER ;

DROP PROCEDURE IF EXISTS CUSTOMERDETAILS; 

CALL CUSTOMERDETAILS(); 

 
